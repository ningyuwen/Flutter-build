// Generated file. Do not edit.

def localProperties = new Properties()
def localPropertiesFile = new File(buildscript.sourceFile.parentFile.parentFile, 'local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

//Fix Flutter Gradle repositories
def static copyFlutterSdkGradle(project, src, dst) {
    try {
        println "copyFlutterSdkGradle ::: file: " + src
        println "copyFlutterSdkGradle ::: file: " + dst

        File fileSrc = new File(src)
        if (fileSrc.exists()) {
            project.getAnt().copy(file: src, toFile: dst)

            if (!dst.exists()) {
                println "copyFlutterSdkGradle ::: file: " + dst + "not exist"
            }
        } else {
            println "copyFlutterSdkGradle ::: file: " + src + "not exist"
        }
    } catch (Throwable e) {

    }
}

def static fixFlutterSdkGradleBug(src) {
    println "fixFlutterSdkGradleBug ::: file: " + src
    def content = src.getText('UTF-8')
    if (!content.contains("Fix Flutter Gradle repositories ")) {
        def updatedContent = src.getText('UTF-8')
                .replaceAll("jcenter\\(\\)", "maven { url 'http://repo.yypm.com:8181/nexus/content/groups/public' }")
        src.write(updatedContent.toString(), 'UTF-8')
    }
}

def sdk_gradle_path = flutterRoot + "/packages/flutter_tools/gradle/flutter.gradle"
copyFlutterSdkGradle(project, sdk_gradle_path, project.file('flutter.gradle'))
fixFlutterSdkGradleBug(project.file('flutter.gradle'))
fixFlutterSdkGradleBug(new File(sdk_gradle_path))

apply plugin: 'com.android.library'
apply from: "flutter.gradle"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

group 'com.yy.mygirgir.girgir_im'
version '1.0'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:support-v13:27.1.1'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.41"
}
